query GetUsers @auth(level: PUBLIC) {
  users{
    userId
    displayName
    email
    photoUrl
    createdAt
  }
}

query GetUser($userId: UUID!) @auth(level: PUBLIC) {
  user(first: {where: {userId: {eq: $userId}}}) {
    userId
    displayName
    email
    photoUrl
    createdAt
  }
}

query GetEvents @auth(level: PUBLIC) {
  events{
    subject
    description
    startTime
    endTime
    location
    recurrenceRule
    createdAt
  }
}

mutation CreateEvent($subject: String!, $description: String, $startTime: Timestamp, $endTime: Timestamp, $location: String, $recurrenceRule: String) @auth(level: PUBLIC) {
  event_insert(data: {
    subject: $subject
    description: $description
    startTime: $startTime
    endTime: $endTime
    location: $location
    recurrenceRule: $recurrenceRule
    createdAt_expr: "request.time"
  }) 
}